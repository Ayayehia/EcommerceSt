{"version":3,"file":"index.js","sources":["../../node_modules/credit-card-type/dist/lib/card-types.js","../../node_modules/credit-card-type/dist/lib/clone.js","../../node_modules/credit-card-type/dist/lib/matches.js","../../node_modules/credit-card-type/dist/lib/add-matching-cards-to-results.js","../../node_modules/credit-card-type/dist/lib/is-valid-input-type.js","../../node_modules/credit-card-type/dist/lib/find-best-match.js","../../node_modules/credit-card-type/dist/index.js","../../src/utils/cardTypes.ts","../../src/utils/cardHelpers.ts","../../node_modules/luhn/src/luhn.js","../../src/ReactCreditCards.tsx"],"sourcesContent":["\"use strict\";\nvar cardTypes = {\n    visa: {\n        niceType: \"Visa\",\n        type: \"visa\",\n        patterns: [4],\n        gaps: [4, 8, 12],\n        lengths: [16, 18, 19],\n        code: {\n            name: \"CVV\",\n            size: 3,\n        },\n    },\n    mastercard: {\n        niceType: \"Mastercard\",\n        type: \"mastercard\",\n        patterns: [[51, 55], [2221, 2229], [223, 229], [23, 26], [270, 271], 2720],\n        gaps: [4, 8, 12],\n        lengths: [16],\n        code: {\n            name: \"CVC\",\n            size: 3,\n        },\n    },\n    \"american-express\": {\n        niceType: \"American Express\",\n        type: \"american-express\",\n        patterns: [34, 37],\n        gaps: [4, 10],\n        lengths: [15],\n        code: {\n            name: \"CID\",\n            size: 4,\n        },\n    },\n    \"diners-club\": {\n        niceType: \"Diners Club\",\n        type: \"diners-club\",\n        patterns: [[300, 305], 36, 38, 39],\n        gaps: [4, 10],\n        lengths: [14, 16, 19],\n        code: {\n            name: \"CVV\",\n            size: 3,\n        },\n    },\n    discover: {\n        niceType: \"Discover\",\n        type: \"discover\",\n        patterns: [6011, [644, 649], 65],\n        gaps: [4, 8, 12],\n        lengths: [16, 19],\n        code: {\n            name: \"CID\",\n            size: 3,\n        },\n    },\n    jcb: {\n        niceType: \"JCB\",\n        type: \"jcb\",\n        patterns: [2131, 1800, [3528, 3589]],\n        gaps: [4, 8, 12],\n        lengths: [16, 17, 18, 19],\n        code: {\n            name: \"CVV\",\n            size: 3,\n        },\n    },\n    unionpay: {\n        niceType: \"UnionPay\",\n        type: \"unionpay\",\n        patterns: [\n            620,\n            [624, 626],\n            [62100, 62182],\n            [62184, 62187],\n            [62185, 62197],\n            [62200, 62205],\n            [622010, 622999],\n            622018,\n            [622019, 622999],\n            [62207, 62209],\n            [622126, 622925],\n            [623, 626],\n            6270,\n            6272,\n            6276,\n            [627700, 627779],\n            [627781, 627799],\n            [6282, 6289],\n            6291,\n            6292,\n            810,\n            [8110, 8131],\n            [8132, 8151],\n            [8152, 8163],\n            [8164, 8171],\n        ],\n        gaps: [4, 8, 12],\n        lengths: [14, 15, 16, 17, 18, 19],\n        code: {\n            name: \"CVN\",\n            size: 3,\n        },\n    },\n    maestro: {\n        niceType: \"Maestro\",\n        type: \"maestro\",\n        patterns: [\n            493698,\n            [500000, 504174],\n            [504176, 506698],\n            [506779, 508999],\n            [56, 59],\n            63,\n            67,\n            6,\n        ],\n        gaps: [4, 8, 12],\n        lengths: [12, 13, 14, 15, 16, 17, 18, 19],\n        code: {\n            name: \"CVC\",\n            size: 3,\n        },\n    },\n    elo: {\n        niceType: \"Elo\",\n        type: \"elo\",\n        patterns: [\n            401178,\n            401179,\n            438935,\n            457631,\n            457632,\n            431274,\n            451416,\n            457393,\n            504175,\n            [506699, 506778],\n            [509000, 509999],\n            627780,\n            636297,\n            636368,\n            [650031, 650033],\n            [650035, 650051],\n            [650405, 650439],\n            [650485, 650538],\n            [650541, 650598],\n            [650700, 650718],\n            [650720, 650727],\n            [650901, 650978],\n            [651652, 651679],\n            [655000, 655019],\n            [655021, 655058],\n        ],\n        gaps: [4, 8, 12],\n        lengths: [16],\n        code: {\n            name: \"CVE\",\n            size: 3,\n        },\n    },\n    mir: {\n        niceType: \"Mir\",\n        type: \"mir\",\n        patterns: [[2200, 2204]],\n        gaps: [4, 8, 12],\n        lengths: [16, 17, 18, 19],\n        code: {\n            name: \"CVP2\",\n            size: 3,\n        },\n    },\n    hiper: {\n        niceType: \"Hiper\",\n        type: \"hiper\",\n        patterns: [637095, 63737423, 63743358, 637568, 637599, 637609, 637612],\n        gaps: [4, 8, 12],\n        lengths: [16],\n        code: {\n            name: \"CVC\",\n            size: 3,\n        },\n    },\n    hipercard: {\n        niceType: \"Hipercard\",\n        type: \"hipercard\",\n        patterns: [606282],\n        gaps: [4, 8, 12],\n        lengths: [16],\n        code: {\n            name: \"CVC\",\n            size: 3,\n        },\n    },\n};\nmodule.exports = cardTypes;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.clone = void 0;\nfunction clone(originalObject) {\n    if (!originalObject) {\n        return null;\n    }\n    return JSON.parse(JSON.stringify(originalObject));\n}\nexports.clone = clone;\n","\"use strict\";\n/*\n * Adapted from https://github.com/polvo-labs/card-type/blob/aaab11f80fa1939bccc8f24905a06ae3cd864356/src/cardType.js#L37-L42\n * */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.matches = void 0;\nfunction matchesRange(cardNumber, min, max) {\n    var maxLengthToCheck = String(min).length;\n    var substr = cardNumber.substr(0, maxLengthToCheck);\n    var integerRepresentationOfCardNumber = parseInt(substr, 10);\n    min = parseInt(String(min).substr(0, substr.length), 10);\n    max = parseInt(String(max).substr(0, substr.length), 10);\n    return (integerRepresentationOfCardNumber >= min &&\n        integerRepresentationOfCardNumber <= max);\n}\nfunction matchesPattern(cardNumber, pattern) {\n    pattern = String(pattern);\n    return (pattern.substring(0, cardNumber.length) ===\n        cardNumber.substring(0, pattern.length));\n}\nfunction matches(cardNumber, pattern) {\n    if (Array.isArray(pattern)) {\n        return matchesRange(cardNumber, pattern[0], pattern[1]);\n    }\n    return matchesPattern(cardNumber, pattern);\n}\nexports.matches = matches;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addMatchingCardsToResults = void 0;\nvar clone_1 = require(\"./clone\");\nvar matches_1 = require(\"./matches\");\nfunction addMatchingCardsToResults(cardNumber, cardConfiguration, results) {\n    var i, patternLength;\n    for (i = 0; i < cardConfiguration.patterns.length; i++) {\n        var pattern = cardConfiguration.patterns[i];\n        if (!matches_1.matches(cardNumber, pattern)) {\n            continue;\n        }\n        var clonedCardConfiguration = clone_1.clone(cardConfiguration);\n        if (Array.isArray(pattern)) {\n            patternLength = String(pattern[0]).length;\n        }\n        else {\n            patternLength = String(pattern).length;\n        }\n        if (cardNumber.length >= patternLength) {\n            clonedCardConfiguration.matchStrength = patternLength;\n        }\n        results.push(clonedCardConfiguration);\n        break;\n    }\n}\nexports.addMatchingCardsToResults = addMatchingCardsToResults;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidInputType = void 0;\nfunction isValidInputType(cardNumber) {\n    return typeof cardNumber === \"string\" || cardNumber instanceof String;\n}\nexports.isValidInputType = isValidInputType;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.findBestMatch = void 0;\nfunction hasEnoughResultsToDetermineBestMatch(results) {\n    var numberOfResultsWithMaxStrengthProperty = results.filter(function (result) { return result.matchStrength; }).length;\n    /*\n     * if all possible results have a maxStrength property that means the card\n     * number is sufficiently long enough to determine conclusively what the card\n     * type is\n     * */\n    return (numberOfResultsWithMaxStrengthProperty > 0 &&\n        numberOfResultsWithMaxStrengthProperty === results.length);\n}\nfunction findBestMatch(results) {\n    if (!hasEnoughResultsToDetermineBestMatch(results)) {\n        return null;\n    }\n    return results.reduce(function (bestMatch, result) {\n        if (!bestMatch) {\n            return result;\n        }\n        /*\n         * If the current best match pattern is less specific than this result, set\n         * the result as the new best match\n         * */\n        if (Number(bestMatch.matchStrength) < Number(result.matchStrength)) {\n            return result;\n        }\n        return bestMatch;\n    });\n}\nexports.findBestMatch = findBestMatch;\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar cardTypes = require(\"./lib/card-types\");\nvar add_matching_cards_to_results_1 = require(\"./lib/add-matching-cards-to-results\");\nvar is_valid_input_type_1 = require(\"./lib/is-valid-input-type\");\nvar find_best_match_1 = require(\"./lib/find-best-match\");\nvar clone_1 = require(\"./lib/clone\");\nvar customCards = {};\nvar cardNames = {\n    VISA: \"visa\",\n    MASTERCARD: \"mastercard\",\n    AMERICAN_EXPRESS: \"american-express\",\n    DINERS_CLUB: \"diners-club\",\n    DISCOVER: \"discover\",\n    JCB: \"jcb\",\n    UNIONPAY: \"unionpay\",\n    MAESTRO: \"maestro\",\n    ELO: \"elo\",\n    MIR: \"mir\",\n    HIPER: \"hiper\",\n    HIPERCARD: \"hipercard\",\n};\nvar ORIGINAL_TEST_ORDER = [\n    cardNames.VISA,\n    cardNames.MASTERCARD,\n    cardNames.AMERICAN_EXPRESS,\n    cardNames.DINERS_CLUB,\n    cardNames.DISCOVER,\n    cardNames.JCB,\n    cardNames.UNIONPAY,\n    cardNames.MAESTRO,\n    cardNames.ELO,\n    cardNames.MIR,\n    cardNames.HIPER,\n    cardNames.HIPERCARD,\n];\nvar testOrder = clone_1.clone(ORIGINAL_TEST_ORDER);\nfunction findType(cardType) {\n    return customCards[cardType] || cardTypes[cardType];\n}\nfunction getAllCardTypes() {\n    return testOrder.map(function (cardType) { return clone_1.clone(findType(cardType)); });\n}\nfunction getCardPosition(name, ignoreErrorForNotExisting) {\n    if (ignoreErrorForNotExisting === void 0) { ignoreErrorForNotExisting = false; }\n    var position = testOrder.indexOf(name);\n    if (!ignoreErrorForNotExisting && position === -1) {\n        throw new Error('\"' + name + '\" is not a supported card type.');\n    }\n    return position;\n}\nfunction creditCardType(cardNumber) {\n    var results = [];\n    if (!is_valid_input_type_1.isValidInputType(cardNumber)) {\n        return results;\n    }\n    if (cardNumber.length === 0) {\n        return getAllCardTypes();\n    }\n    testOrder.forEach(function (cardType) {\n        var cardConfiguration = findType(cardType);\n        add_matching_cards_to_results_1.addMatchingCardsToResults(cardNumber, cardConfiguration, results);\n    });\n    var bestMatch = find_best_match_1.findBestMatch(results);\n    if (bestMatch) {\n        return [bestMatch];\n    }\n    return results;\n}\ncreditCardType.getTypeInfo = function (cardType) {\n    return clone_1.clone(findType(cardType));\n};\ncreditCardType.removeCard = function (name) {\n    var position = getCardPosition(name);\n    testOrder.splice(position, 1);\n};\ncreditCardType.addCard = function (config) {\n    var existingCardPosition = getCardPosition(config.type, true);\n    customCards[config.type] = config;\n    if (existingCardPosition === -1) {\n        testOrder.push(config.type);\n    }\n};\ncreditCardType.updateCard = function (cardType, updates) {\n    var originalObject = customCards[cardType] || cardTypes[cardType];\n    if (!originalObject) {\n        throw new Error(\"\\\"\" + cardType + \"\\\" is not a recognized type. Use `addCard` instead.'\");\n    }\n    if (updates.type && originalObject.type !== updates.type) {\n        throw new Error(\"Cannot overwrite type parameter.\");\n    }\n    var clonedCard = clone_1.clone(originalObject);\n    clonedCard = __assign(__assign({}, clonedCard), updates);\n    customCards[clonedCard.type] = clonedCard;\n};\ncreditCardType.changeOrder = function (name, position) {\n    var currentPosition = getCardPosition(name);\n    testOrder.splice(currentPosition, 1);\n    testOrder.splice(position, 0, name);\n};\ncreditCardType.resetModifications = function () {\n    testOrder = clone_1.clone(ORIGINAL_TEST_ORDER);\n    customCards = {};\n};\ncreditCardType.types = cardNames;\nmodule.exports = creditCardType;\n",null,null,"\"use strict\";\nmodule.exports = (function(){\n\tfunction validate(cardNumber){\n\t\tvar trimmed = String(cardNumber).replace(/[\\s]/g, \"\")\n\t\t\t, length = trimmed.length\n\t\t\t, odd = false\n\t\t\t, total = 0\n\t\t\t, calc\n\t\t\t, calc2;\n\n\t\t\tif (!/^[0-9]+$/.test(trimmed)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tfor (var i = length; i > 0; i--) {\n\t\t\t\tcalc = parseInt(trimmed.charAt(i - 1));\n\t\t\t\tif (!odd) {\n\t\t\t\t\ttotal += calc;\n\t\t\t\t} else {\n\t\t\t\t\tcalc2 = calc * 2;\n\n\t\t\t\t\tswitch (calc2) {\n\t\t\t\t\tcase 10: calc2 = 1; break;\n\t\t\t\t\tcase 12: calc2 = 3; break;\n\t\t\t\t\tcase 14: calc2 = 5; break;\n\t\t\t\t\tcase 16: calc2 = 7; break;\n\t\t\t\t\tcase 18: calc2 = 9; break;\n\t\t\t\t\tdefault: calc2 = calc2;\n\t\t\t\t\t}\n\t\t\t\t\ttotal += calc2;\n\t\t\t\t}\n\t\t\t\todd = !odd;\n\t\t\t}\n\n\t\t\treturn (total !== 0 && (total % 10) === 0);\n\t\t}\n\n\t\treturn {\n\t\t\tvalidate: validate\n\t\t};\n} ());\n",null],"names":["cardTypes_1","visa","niceType","type","patterns","gaps","lengths","code","name","size","mastercard","discover","jcb","unionpay","maestro","elo","mir","hiper","hipercard","Object","defineProperty","clone_1","value","clone","originalObject","JSON","parse","stringify","matches_1","matches","cardNumber","pattern","Array","isArray","min","max","maxLengthToCheck","String","length","substr","integerRepresentationOfCardNumber","parseInt","matchesRange","substring","matchesPattern","addMatchingCardsToResults_1","addMatchingCardsToResults","require$$0","require$$1","cardConfiguration","results","i","patternLength","clonedCardConfiguration","matchStrength","push","isValidInputType_1","isValidInputType","findBestMatch_1","findBestMatch","numberOfResultsWithMaxStrengthProperty","filter","result","hasEnoughResultsToDetermineBestMatch","reduce","bestMatch","Number","__assign","this","assign","t","s","n","arguments","p","prototype","hasOwnProperty","call","apply","cardTypes","add_matching_cards_to_results_1","is_valid_input_type_1","require$$2","find_best_match_1","require$$3","require$$4","customCards","cardNames","VISA","MASTERCARD","AMERICAN_EXPRESS","DINERS_CLUB","DISCOVER","JCB","UNIONPAY","MAESTRO","ELO","MIR","HIPER","HIPERCARD","ORIGINAL_TEST_ORDER","testOrder","findType","cardType","getCardPosition","ignoreErrorForNotExisting","position","indexOf","Error","creditCardType","map","forEach","getTypeInfo","removeCard","splice","addCard","config","existingCardPosition","updateCard","updates","clonedCard","changeOrder","currentPosition","resetModifications","types","dist","dankort","laser","visaElectron","validateLuhn","validate","calc","calc2","trimmed","replace","odd","total","test","charAt","getCardType","potentialCardTypes","toString","trim","firstResult","shift","setInitialValidCardTypes","values","concat","cardTypesMap","amex","dinersclub","visaelectron","props","_a","acceptedCards","number","issuer","_b","preview","expiry","cvc","focused","_c","locale","valid","_d","placeholders","callback","_e","React","useState","setCardTypes","validCardTypes","useMemo","card","includes","cardOptions","updatedIssuer","validatedIssuer","maxLength","cardIssuer","toLowerCase","nextNumber","isNaN","slice","format","limit","space_index","cardExpiry","date","month","year","split","updateValidCardTypes","useCallback","acceptedCardsInput","initialValidCardTypes","useEffect","key","className","createElement","join"],"mappings":"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"}